.MODEL SMALL          
.STACK 100
.DATA    
    GREETING1  DB 'INPUT A: $'  
    GREETING2  DB 'INPUT B: $' 
    RESULT     DB 'A+B= $' 
    CFLF DB 13,10, '$'  
    NUM1 DW ?
    NUM2 DW ?
    RS DW ?
.CODE
MAIN PROC         
    ; KHOI DONG THANH GHI DS
    MOV AX, @DATA
    MOV DS, AX      
    ; PRINT GREETING1
    MOV AH, 9
    LEA DX, GREETING1  
    INT 21H 
    ; BX =0
    XOR BX,BX
    ; READ A CHARACTER FROM KEYBOARD 
    CALL LOOPINPUTCHARACTER1
   ;XUONG DONG
CONTINUEINPUT:
    MOV NUM1, BX; MOVE VALUE OF BX TO NUM1 TO RESTORE
    CALL NEXTLINE 
    ; PRINT GREETING2
    MOV AH, 9
    LEA DX, GREETING2  
    INT 21H 
    ; BX =0
    XOR BX,BX
    ; READ A CHARACTER FROM KEYBOARD 
    CALL LOOPINPUTCHARACTER2    
CONTINUEINPUT1:
    MOV DX, NUM1
    ADD BX, DX
    CALL NEXTLINE
    ; PRINT GREETING    
    MOV AH, 9
    LEA DX, RESULT  
    INT 21H
    MOV AX, BX; MOVE VALUE OF BX TO AX
    CALL OUTPUTDEX
    MOV AH, 4CH
    INT 21H    
MAIN ENDP

INPUTDEC PROC
    PUSH AX ; MOVE VALUE OF AX TO STACK
    MOV AX,10 ; 
    MUL BX; BX MULTIPLY 10(RESULT TO AX)
    MOV BX, AX
    POP AX; TAKE VALUR FROM STACK
    ADD BX, AX      
RET
INPUTDEC ENDP

LOOPINPUTCHARACTER1 PROC
    MOV AH,1
    INT 21H
    CMP AL, 13; CHECK PRESS ENTER?
    JE CONTINUEINPUT; YES, JUMP TO CONTINUEINPUT 
    AND AX, 000FH
    CALL INPUTDEC  
    LOOP LOOPINPUTCHARACTER1
RET
LOOPINPUTCHARACTER1 ENDP  

LOOPINPUTCHARACTER2 PROC
    MOV AH,1
    INT 21H
    CMP AL, 13; CHECK PRESS ENTER?
    JE CONTINUEINPUT1; YES, JUMP TO CONTINUEINPUT
    AND AX, 000FH; MOVE VALUE
    CALL INPUTDEC  
    LOOP LOOPINPUTCHARACTER2
RET
LOOPINPUTCHARACTER2 ENDP
    
NEXTLINE PROC 
    MOV AH,9
    LEA DX,CFLF
    INT 21H  
RET
NEXTLINE ENDP

OUTPUTDEX PROC
CMP AX, 0
    JGE POSITIVENUMBERS
    PUSH AX
    MOV DL,'-'
    MOV AH,2
    INT 21H
    POP AX
    NEG AX
    POSITIVENUMBERS:
        XOR CX, CX
        MOV BX, 10
    DIVIDENUMBER:
        XOR DX, DX
        DIV BX ; DIVIDE WITH 10, SAVE REMINDER IN DX
        PUSH DX
        INC CX ; INCREASE CX 1 AFTER DIVIDE
        CMP AX,0 ; COMPARE AX, IF AX =0, STOP DIVIDE
        JNE DIVIDENUMBER
    PRINTNUMBER:MOV AH,2
        POP DX
        OR DL, 30H
        INT 21H
        LOOP PRINTNUMBER  
RET
OUTPUTDEX ENDP

    END MAIN
